@model IEnumerable<RecipeForSuccess.ViewModels.RecipeVM>

@{
    ViewBag.Title = "Index";
}

<div class="container">

    <h2>My Recipes</h2>
    <div class="row">

        <p class="float-left">
            @Html.ActionLink("Create New", "AddRecipe", new object { }, new { @class = "btn btn-primary", style = "margin-top:11px; margin-right:5px;" })
        </p>
        <ul class="nav navbar-nav float-right">
            <li class="recipeLiveSearchLi mainSearchLi">
                <input id="recipeSearchText" class="searchText form-control" type="text" placeholder="Search Recipes" />
                <ul id="recipeLiveSearchUl"></ul>
            </li>
        </ul>
    </div>
    <table class="table table-responsive-sm">
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th class="created">
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th class="description">
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th class="mealType">
                @Html.DisplayNameFor(model => model.Meal_type_name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Favorite)
            </th>
            <th>
                Rating
            </th>
         

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/Uploads/@(item.recipe_id).jpg" id="recipePic" class="rounded" />
                </td>
                <td>
                    @Html.ActionLink(item.Name, "ViewRecipe", new { recipeID = item.recipe_id })
                </td>

                <td class="created">
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td class="description">
                  
                    @Html.DisplayFor(modelItem => item.Description)
                </td>

                <td class="mealType">
                    @Html.DisplayFor(modelItem => item.Meal_type_name)
                </td>
                <td>
                    @if (item.Favorite == true)
                    {
                        <a class="favorite" href="#" data-rid="@item.recipe_id" data-uid="@item.User_id">  <span class="fa fa-heart fa-star"></span></a>
                    }
                    else
                    {
                        <a class="favorite" href ="#" data-rid="@item.recipe_id" data-uid="@item.User_id">  <span class="fa fa-heart-o"></span></a>
                    }

                </td>
                <td>
                  class="rating"   ☆ data-id="1" ☆ data-id ="2" ☆ ☆ ☆
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |*@
                    @Html.ActionLink("Details", "ViewRecipe", new { recipeID = item.recipe_id }) |
                    @*@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                </td>
            </tr>
        }

    </table>

</div>

@section Scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="/signalr/hubs"></script>
    <script>

        $(document).ready(function () {


            /*
             *
             * Favorite recipe
             * */
            $("body").on("click", "a.favorite", function (e) {
                e.preventDefault();

                var $this = $(this);
                var favClass = $this.find("span").attr('class');
                //console.log("favClass: " + favClass);

                var classesArray = favClass.split(" ");
                //console.log("classes array: " + classesArray);

                var favoriteType;

                classesArray.forEach(function (cls) {
                    if (cls.includes('o')) {
                        favoriteType = 'add';
                    } else {
                        favoriteType = "remove";
                    }
                });

                //console.log(favoriteType);

                var recipeID = $this.data("rid");
                var userID = $this.data("uid");
                var rating = $this.data("id");

                console.log("recipeID=" + recipeID);
                console.log("userID=" + userID);

                var url = "/recipes/updatefavorite";

                $.post(url, { recipeID: recipeID, userID: userID, favoriteType: favoriteType }, function (data) {

                }).done(function () {
                    if (favoriteType == 'add') {
                        $this.find("span").removeClass('fa-heart-o').addClass('fa-heart');
                    } else {
                        $this.find("span").removeClass('fa-heart').addClass('fa-heart-o');
                    }
                });
            });

            /*
            * Live Search Recipe
            */

            $('input#recipeSearchText').blur(function () {

            });

            $('input#recipeSearchText').keyup(function () {
                $('ul#recipeLiveSearchUl').empty();

              

                var currentRecipePageNumber = 1;
                //$('#tblRecipes tbody').find("tr").remove();
                var searchVal = $('input#recipeSearchText').val();

                if (searchVal == "" || searchVal == " " || searchVal.length < 1) {
                    return false
                }

                loadRecipes(currentRecipePageNumber, searchVal);

                $(window).scroll(function () {
                    if ($(window).scrollTop() == $(document).height() - $(window).height()) {
                        currentRecipePageNumber += 1;
                        loadRecipes(currentRecipePageNumber);
                    }
                });

            });

            // recipe search click close
            $("body").on('click', 'ul#recipeLiveSearchUl li.close', function () {
                $('ul#recipeLiveSearchUl').empty();
                $('input#recipeSearchText').val('');
            });

            function loadRecipes(currentPage, searchVal) {
                $.ajax({
                    url: '/FriendService.asmx/SearchRecipes',
                    method: 'post',
                    data: { pageNumber: currentPage, pageSize: 15, searchVal: searchVal },
                    dataType: 'json',
                    success: function (data) {
                        //var recipeTable = $('#tblRecipes tbody');
                        if (data.length > 0) {
                            $('ul#recipeLiveSearchUl').append("<li class=close>x</li>");
                            $(data).each(function (index, recipe) {
                                //var tr = '<tr><td>' + recipe.Name + '</td></tr>';
                                //console.log(tr);
                                //recipeTable.append(tr);
                                $('ul#recipeLiveSearchUl').append('<li class="recipeLiveSearchLi" ><i class="fa fa-search mr-2"></i><a class=searchLi data-id="' + recipe.recipe_id + '" href="/recipes/viewrecipe?recipeID=' + recipe.recipe_id + '">' + recipe.Name + '</a></li>');
                            });
                        }
                    }
                });
            }

             /*
            * Display friend requests
            */

            $("body").on("click", "span.friendRequestNotification.green", function () {

                window.location.href = "/" + '@ViewBag.Username';

                //$('ul#friendRequestNotifUL').empty();


                //var url = '/profile/DisplayFriendRequests';
                //$.post(url, {}, function (data) {
                //    if (data.length > 0) {
                //        $('ul#friendRequestNotifUL').append("<li class=close>x</li>");
                //    }
                //    for (var i = 0; i < data.length; i++) {
                //        var obj = data[i];

                //        $('ul#friendRequestNotifUL').append('<li class=friendRequestNotificationLi><a href="/' + obj.Username + '">' + obj.First_name + ' ' + obj.Last_name + '</a> ' + '<a class=accept href="#" data-id="' + obj.User_id + '"><span><i class="fa fa-check"></i></span></a>' + ' ' + '<a class=decline href="#" data-id=' + obj.User_id + '"><span><i class="fa fa-window-close"></i></span></a></li>');
                //    }

                //});
            });

            // Setup Hub Connection
            var hub = $.connection.echo;

            hub.client.test = function (msg) {
                console.log(msg);
            }

            hub.client.friendRequestNotify = function (friend, requestCount) {

                $("span.friendRequestNotification." + friend + "> span").text(requestCount);
                $("span.friendRequestNotification." + friend).addClass("green");
            }

            hub.client.friendRequestCount = function (username, count) {
                if (count > 0) {
                    $("span.friendRequestNotification." + username + "> span").text(count);
                }
                else {
                    $("span.friendRequestNotification." + username + "> span").text("");
                    $("span.friendRequestNotification." + username).removeClass("green");

                }
            }

            // connect to the hub
            $.connection.hub
            .start()
            .done(function () {

                hub.server.hello("SignalR works from Username");

                /*
                 * Add Friend From their page
                 */


                $('a.addFriendFromPage').click(function (e) {
                    e.preventDefault();

                    var friend = '@ViewBag.ViewingUserName'

                    var url = '/profile/AddFriend';

                    $.post(url, { friend: friend }, function (data) {
                        //$('.areFriendsDiv').removeClass('alert-info').addClass('alert-warning').html('<p>Pending Friend Request</p>');
                    }).done(function () {
                        hub.server.notify(friend);
                        window.location.href = "/" + friend;
                    });
                });


                /*
                    * Add Friend
                    */
                $('a.addFriend').click(function (e) {
                    e.preventDefault();

                    var $this = $(this);
                    var userName = $this.data("id");

                    var friend = '@ViewBag.UserName';

                    console.log('friend: ' + friend);
                    console.log('userName: ' + userName);

                    var url = '/profile/AddFriend';

                    $.post(url, { friend: userName }, function (data) {
                        //$('.areFriendsDiv').removeClass('alert-info').addClass('alert-warning').html('<p>Pending Friend Request</p>');
                    }).done(function () {
                        hub.server.notify(friend);
                        window.location.href = "/" + friend;
                    });
                });

                ///////////////////////////////////////////////
                /*
                * Accept friend requests
                */

                $("body").on("click", "a.btnAccept", function (e) {
                    e.preventDefault();

                    var $this = $(this);
                    var friendId = $this.data("id");
                    var trRow = $this.data("row");

                    var friend = '@ViewBag.UserName';
                    console.log('rownum: ' + trRow);
                    var url = "/profile/AcceptFriendRequest";
                    $.post(url, { friendId: friendId }, function (data) {
                    }).done(function () {
                        //$this.parent().fadeOut("fast");
                        hub.server.getFriendRequestCount(@ViewBag.UserID);

                        //hub.server.getFriendCount(friendId);
                        window.location.href = "/" + friend;
                        $this.parent().parent().remove();
                        //loadFriends(currentPageNumber);
                    });
                });

                ///////////////////////////////////////////////
                /*
                * Decline friend requests
                */

                $("body").on("click", "a.btnDecline", function (e) {
                    e.preventDefault();

                    var $this = $(this);
                    var friendId = $this.data("id");
                    var trRow = $this.data("row");

                    var friend = '@ViewBag.UserName';
                    console.log('rownum: ' + trRow);
                    var url = "/profile/DeclineFriendRequest";
                    $.post(url, { friendId: friendId }, function (data) {
                    }).done(function () {
                        //$this.parent().fadeOut("fast");
                        hub.server.getFriendRequestCount(@ViewBag.UserID);

                        //hub.server.getFriendCount(friendId);
                        window.location.href = "/" + friend;
                        //$this.parent().parent().remove();
                        //loadFriends(currentPageNumber);
                    });
                });

            });


        });


    </script>
}
